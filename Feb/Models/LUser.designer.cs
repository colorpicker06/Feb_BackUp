#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Feb.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Mirim2018")]
	public partial class LUserDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 확장성 메서드 정의
    partial void OnCreated();
    partial void InsertFeb_member(Feb_member instance);
    partial void UpdateFeb_member(Feb_member instance);
    partial void DeleteFeb_member(Feb_member instance);
    partial void InsertFeb_Worry(Feb_Worry instance);
    partial void UpdateFeb_Worry(Feb_Worry instance);
    partial void DeleteFeb_Worry(Feb_Worry instance);
    partial void InsertFeb_suggest(Feb_suggest instance);
    partial void UpdateFeb_suggest(Feb_suggest instance);
    partial void DeleteFeb_suggest(Feb_suggest instance);
    #endregion
		
		public LUserDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Mirim2018ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LUserDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LUserDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LUserDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LUserDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Feb_member> Feb_member
		{
			get
			{
				return this.GetTable<Feb_member>();
			}
		}
		
		public System.Data.Linq.Table<Feb_Worry> Feb_Worry
		{
			get
			{
				return this.GetTable<Feb_Worry>();
			}
		}
		
		public System.Data.Linq.Table<Feb_suggest> Feb_suggest
		{
			get
			{
				return this.GetTable<Feb_suggest>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feb_member")]
	public partial class Feb_member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _email;
		
		private string _pw;
		
		private string _nickname;
		
		private int _leave_chk;
		
		private int _report_chk;
		
		private EntitySet<Feb_Worry> _Feb_Worry;
		
		private EntitySet<Feb_suggest> _Feb_suggest;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpwChanging(string value);
    partial void OnpwChanged();
    partial void OnnicknameChanging(string value);
    partial void OnnicknameChanged();
    partial void Onleave_chkChanging(int value);
    partial void Onleave_chkChanged();
    partial void Onreport_chkChanging(int value);
    partial void Onreport_chkChanged();
    #endregion
		
		public Feb_member()
		{
			this._Feb_Worry = new EntitySet<Feb_Worry>(new Action<Feb_Worry>(this.attach_Feb_Worry), new Action<Feb_Worry>(this.detach_Feb_Worry));
			this._Feb_suggest = new EntitySet<Feb_suggest>(new Action<Feb_suggest>(this.attach_Feb_suggest), new Action<Feb_suggest>(this.detach_Feb_suggest));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pw", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string pw
		{
			get
			{
				return this._pw;
			}
			set
			{
				if ((this._pw != value))
				{
					this.OnpwChanging(value);
					this.SendPropertyChanging();
					this._pw = value;
					this.SendPropertyChanged("pw");
					this.OnpwChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nickname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nickname
		{
			get
			{
				return this._nickname;
			}
			set
			{
				if ((this._nickname != value))
				{
					this.OnnicknameChanging(value);
					this.SendPropertyChanging();
					this._nickname = value;
					this.SendPropertyChanged("nickname");
					this.OnnicknameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_leave_chk", DbType="Int NOT NULL")]
		public int leave_chk
		{
			get
			{
				return this._leave_chk;
			}
			set
			{
				if ((this._leave_chk != value))
				{
					this.Onleave_chkChanging(value);
					this.SendPropertyChanging();
					this._leave_chk = value;
					this.SendPropertyChanged("leave_chk");
					this.Onleave_chkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_report_chk", DbType="Int NOT NULL")]
		public int report_chk
		{
			get
			{
				return this._report_chk;
			}
			set
			{
				if ((this._report_chk != value))
				{
					this.Onreport_chkChanging(value);
					this.SendPropertyChanging();
					this._report_chk = value;
					this.SendPropertyChanged("report_chk");
					this.Onreport_chkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Feb_member_Feb_Worry", Storage="_Feb_Worry", ThisKey="id", OtherKey="writer")]
		public EntitySet<Feb_Worry> Feb_Worry
		{
			get
			{
				return this._Feb_Worry;
			}
			set
			{
				this._Feb_Worry.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Feb_member_Feb_suggest", Storage="_Feb_suggest", ThisKey="id", OtherKey="writer")]
		public EntitySet<Feb_suggest> Feb_suggest
		{
			get
			{
				return this._Feb_suggest;
			}
			set
			{
				this._Feb_suggest.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Feb_Worry(Feb_Worry entity)
		{
			this.SendPropertyChanging();
			entity.Feb_member = this;
		}
		
		private void detach_Feb_Worry(Feb_Worry entity)
		{
			this.SendPropertyChanging();
			entity.Feb_member = null;
		}
		
		private void attach_Feb_suggest(Feb_suggest entity)
		{
			this.SendPropertyChanging();
			entity.Feb_member = this;
		}
		
		private void detach_Feb_suggest(Feb_suggest entity)
		{
			this.SendPropertyChanging();
			entity.Feb_member = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feb_Worry")]
	public partial class Feb_Worry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _category_fk;
		
		private int _l_category_fk;
		
		private string _title;
		
		private string _content;
		
		private int _writer;
		
		private System.DateTime _reg_date;
		
		private int _report_chk;
		
		private EntityRef<Feb_member> _Feb_member;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncategory_fkChanging(int value);
    partial void Oncategory_fkChanged();
    partial void Onl_category_fkChanging(int value);
    partial void Onl_category_fkChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnwriterChanging(int value);
    partial void OnwriterChanged();
    partial void Onreg_dateChanging(System.DateTime value);
    partial void Onreg_dateChanged();
    partial void Onreport_chkChanging(int value);
    partial void Onreport_chkChanged();
    #endregion
		
		public Feb_Worry()
		{
			this._Feb_member = default(EntityRef<Feb_member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_fk", DbType="Int NOT NULL")]
		public int category_fk
		{
			get
			{
				return this._category_fk;
			}
			set
			{
				if ((this._category_fk != value))
				{
					this.Oncategory_fkChanging(value);
					this.SendPropertyChanging();
					this._category_fk = value;
					this.SendPropertyChanged("category_fk");
					this.Oncategory_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_l_category_fk", DbType="Int NOT NULL")]
		public int l_category_fk
		{
			get
			{
				return this._l_category_fk;
			}
			set
			{
				if ((this._l_category_fk != value))
				{
					this.Onl_category_fkChanging(value);
					this.SendPropertyChanging();
					this._l_category_fk = value;
					this.SendPropertyChanged("l_category_fk");
					this.Onl_category_fkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_writer", DbType="Int NOT NULL")]
		public int writer
		{
			get
			{
				return this._writer;
			}
			set
			{
				if ((this._writer != value))
				{
					if (this._Feb_member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwriterChanging(value);
					this.SendPropertyChanging();
					this._writer = value;
					this.SendPropertyChanged("writer");
					this.OnwriterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_date", DbType="Date NOT NULL")]
		public System.DateTime reg_date
		{
			get
			{
				return this._reg_date;
			}
			set
			{
				if ((this._reg_date != value))
				{
					this.Onreg_dateChanging(value);
					this.SendPropertyChanging();
					this._reg_date = value;
					this.SendPropertyChanged("reg_date");
					this.Onreg_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_report_chk", DbType="Int NOT NULL")]
		public int report_chk
		{
			get
			{
				return this._report_chk;
			}
			set
			{
				if ((this._report_chk != value))
				{
					this.Onreport_chkChanging(value);
					this.SendPropertyChanging();
					this._report_chk = value;
					this.SendPropertyChanged("report_chk");
					this.Onreport_chkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Feb_member_Feb_Worry", Storage="_Feb_member", ThisKey="writer", OtherKey="id", IsForeignKey=true)]
		public Feb_member Feb_member
		{
			get
			{
				return this._Feb_member.Entity;
			}
			set
			{
				Feb_member previousValue = this._Feb_member.Entity;
				if (((previousValue != value) 
							|| (this._Feb_member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Feb_member.Entity = null;
						previousValue.Feb_Worry.Remove(this);
					}
					this._Feb_member.Entity = value;
					if ((value != null))
					{
						value.Feb_Worry.Add(this);
						this._writer = value.id;
					}
					else
					{
						this._writer = default(int);
					}
					this.SendPropertyChanged("Feb_member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feb_suggest")]
	public partial class Feb_suggest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _writer;
		
		private System.DateTime _reg_date;
		
		private string _title;
		
		private string _content;
		
		private int _action_chk;
		
		private EntityRef<Feb_member> _Feb_member;
		
    #region 확장성 메서드 정의
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnwriterChanging(int value);
    partial void OnwriterChanged();
    partial void Onreg_dateChanging(System.DateTime value);
    partial void Onreg_dateChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void Onaction_chkChanging(int value);
    partial void Onaction_chkChanged();
    #endregion
		
		public Feb_suggest()
		{
			this._Feb_member = default(EntityRef<Feb_member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_writer", DbType="Int NOT NULL")]
		public int writer
		{
			get
			{
				return this._writer;
			}
			set
			{
				if ((this._writer != value))
				{
					if (this._Feb_member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwriterChanging(value);
					this.SendPropertyChanging();
					this._writer = value;
					this.SendPropertyChanged("writer");
					this.OnwriterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_date", DbType="Date NOT NULL")]
		public System.DateTime reg_date
		{
			get
			{
				return this._reg_date;
			}
			set
			{
				if ((this._reg_date != value))
				{
					this.Onreg_dateChanging(value);
					this.SendPropertyChanging();
					this._reg_date = value;
					this.SendPropertyChanged("reg_date");
					this.Onreg_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_chk", DbType="Int NOT NULL")]
		public int action_chk
		{
			get
			{
				return this._action_chk;
			}
			set
			{
				if ((this._action_chk != value))
				{
					this.Onaction_chkChanging(value);
					this.SendPropertyChanging();
					this._action_chk = value;
					this.SendPropertyChanged("action_chk");
					this.Onaction_chkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Feb_member_Feb_suggest", Storage="_Feb_member", ThisKey="writer", OtherKey="id", IsForeignKey=true)]
		public Feb_member Feb_member
		{
			get
			{
				return this._Feb_member.Entity;
			}
			set
			{
				Feb_member previousValue = this._Feb_member.Entity;
				if (((previousValue != value) 
							|| (this._Feb_member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Feb_member.Entity = null;
						previousValue.Feb_suggest.Remove(this);
					}
					this._Feb_member.Entity = value;
					if ((value != null))
					{
						value.Feb_suggest.Add(this);
						this._writer = value.id;
					}
					else
					{
						this._writer = default(int);
					}
					this.SendPropertyChanged("Feb_member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
